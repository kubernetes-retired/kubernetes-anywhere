#!/bin/sh -x

set -o errexit
set -o nounset
set -o pipefail

git_repo="https://github.com/weaveworks/weave-kubernetes-anywhere"
git_rev=$(git rev-parse @)

dir="$(git rev-parse --show-toplevel)/docker-images"

default_kubernetes_release="v1.1.8"

kubernetes_release=${1:-"${default_kubernetes_release}"}

minor_kubernetes_release=$(echo "${kubernetes_release}" | sed 's/\(v[0-9][0-9]*\.[0-9][0-9]*\)\.[0-9][0-9]*-[ab][le][pt][ha][a]*\.[0-9]/\1/')

toolbox_docker_release="1.10.3"
toolbox_compose_release="1.6.2"
toolbox_jq_release="1.5"
toolbox_easyrsa_release="3.0.1"

image_prefix=${2:-"weaveworks/kubernetes-anywhere:"}

common_labels="
LABEL io.k8s.release=${kubernetes_release}
LABEL works.weave.role=system
LABEL com.git-scm.repo=${git_repo}
LABEL com.git-scm.rev=${git_rev}
"

echo "
FROM gcr.io/google_containers/hyperkube:${kubernetes_release}
ENV KUBERNETES_RELEASE=${kubernetes_release}
${common_labels}
" | docker build --tag="temp/hyperkube" -

for i in kubelet proxy apiserver controller-manager scheduler ; do
  docker build \
    --tag="${image_prefix}${i}-${kubernetes_release}" \
    --file="${dir}/${i}.dockerfile" "${dir}"
done

echo "FROM gcr.io/google_containers/etcd:2.2.1\n${common_labels}" \
  | docker build --tag="temp/etcd" -

docker build \
  --tag="${image_prefix}etcd-${kubernetes_release}" \
  --file="${dir}/etcd.dockerfile" "${dir}"

echo "
FROM centos:7
ENV KUBERNETES_ANYWHERE_TOOLBOX_IMAGE=${image_prefix}toolbox-${kubernetes_release}
${common_labels}
" | docker build --tag="temp/toolbox" -

docker build \
  --tag="${image_prefix}toolbox-${kubernetes_release}" \
  --build-arg="KUBERNETES_RELEASE=${kubernetes_release}" \
  --build-arg="DOCKER_RELEASE=${toolbox_docker_release}" \
  --build-arg="COMPOSE_RELEASE=${toolbox_compose_release}" \
  --build-arg="JQ_RELEASE=${toolbox_jq_release}" \
  --build-arg="EASYRSA_RELEASE=${toolbox_easyrsa_release}" \
  --file="${dir}/toolbox.dockerfile" "${dir}"

for c in kubelet proxy apiserver controller-manager scheduler toolbox etcd ; do
  docker push "${image_prefix}${c}-${kubernetes_release}"
  docker push "${image_prefix}${c}-${minor_kubernetes_release}"
  if [ ${kubernetes_release} = ${default_kubernetes_release} ] ; then
    docker tag "${image_prefix}${c}-${kubernetes_release}" "${image_prefix}${c}"
    docker push "${image_prefix}${c}"
  fi
done
