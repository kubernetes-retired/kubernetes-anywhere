#!/bin/bash -x

# Copyright 2016 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

cd "$(dirname "${BASH_SOURCE[0]}")"

dir="$(pwd)"

source "./config"

printf "FROM gcr.io/google_containers/hyperkube:%s\n%s\n" \
  "${kubernetes_release}" "${common}" \
  | docker build --tag="temp/hyperkube" -

for i in kubelet proxy apiserver controller-manager scheduler ; do
  docker build \
    --tag="${image_prefix}${i}-${kubernetes_release}" \
    --file="${dir}/${i}.dockerfile" "${dir}"
done

printf "FROM gcr.io/google_containers/etcd:2.2.1\n%s\n" "${common}" \
  | docker build --tag="temp/etcd" -

docker build \
  --tag="${image_prefix}etcd-${kubernetes_release}" \
  --file="${dir}/etcd.dockerfile" "${dir}"

printf "FROM alpine:${toolbox_alpine_release}\nENV KUBERNETES_ANYWHERE_TOOLBOX_IMAGE=%s\n%s\n" \
  "${image_prefix}toolbox-${kubernetes_release}-${git_rev_short}" "${common}" \
  | docker build --tag="temp/toolbox" -

docker build \
  --tag="${image_prefix}toolbox-${kubernetes_release}" \
  --build-arg="KUBERNETES_RELEASE=${kubernetes_release}" \
  --build-arg="DOCKER_RELEASE=${toolbox_docker_release}" \
  --build-arg="COMPOSE_RELEASE=${toolbox_compose_release}" \
  --build-arg="ANSIBLE_RELEASE=${toolbox_ansible_release}" \
  --build-arg="BOTO_RELEASE=${toolbox_boto_release}" \
  --build-arg="AWSCLI_RELEASE=${toolbox_awscli_release}" \
  --build-arg="JQ_RELEASE=${toolbox_jq_release}" \
  --build-arg="EASYRSA_RELEASE=${toolbox_easyrsa_release}" \
  --file="${dir}/toolbox.dockerfile" "${dir}"

for c in "${components[@]}" ; do
  img="${image_prefix}${c}"
  docker tag "${img}-${kubernetes_release}" "${img}-${kubernetes_release_short}"
  docker tag "${img}-${kubernetes_release}" "${img}-${kubernetes_release}-${git_rev_short}"
  if [ "${kubernetes_release}" = "${default_kubernetes_release}" ] ; then
    docker tag "${img}-${kubernetes_release}" "${image_prefix}${c}"
  fi
done
